# Reusable workflow to render the spec for a variety of purposes.
# https://docs.github.com/en/actions/using-workflows/reusing-workflows

name: render

on:
  workflow_call:
    inputs:
      container:
        description: the Docker container to use (default is trustedcomputinggroup/pandoc)
        required: false
        type: string
        default: ghcr.io/trustedcomputinggroup/pandoc
      container-version:
        description: the released version of the Docker container to use
        required: true
        type: string
      input:
        description: the Markdown file to render
        required: true
        type: string
      workflow:
        description: the workflow to run ('pr', 'push', 'release', 'manual')
        required: true
        type: string
      manual_diffbase:
        description: diffbase for manual workflow
        required: false
        type: string
      revision:
        description: version to render (defaults is default branch)
        required: false
        type: string

jobs:
  render:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.container }}:${{ inputs.container-version }}
    name: Render
    steps:
      # Use the input file name (no extension) as the base filename for the output
      - name: Calculate output file name
        id: gen_output_name
        run: |
          filename=$(basename ${{ inputs.input }})
          filename="${filename%.*}"
          echo OUTPUT_FILENAME="${filename}" >> "$GITHUB_OUTPUT"
          echo output filename: ${filename}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.revision }}
          fetch-depth: 0
          fetch-tags: true

      # Cache the LaTeX files. Use input file and container version in the cache
      # key so that the cache is invalidated upon file change or container
      # version change.
      - name: Cache LaTeX files
        uses: actions/cache@v4
        env:
          cache-name: cache-latex-${{ inputs.input }}-files
        with:
          path: |
            *.aux
            *.fdb_latexmk
            *.lof
            *.lot
            *.toc
            *.upa
            *.upb
            *.convert.pdf
            *.mermaid.pdf
            *.aasvg.pdf
          key: latex-${{ inputs.input }}-${{ inputs.container-version }}-${{ github.run_id }}
          restore-keys: latex-${{ inputs.input }}-${{ inputs.container-version }}

      # Note: It appears that we can't pass variables into 'uses:' below to allow callers to
      # request a version of the action. Referencing it by local path breaks external workflows
      # that call to this one.
      # The unfortunate workaround is for this file to be updated to point at specific commits
      # and reference that version of the action file in this reusable workflow.
      # Note: It appears that we can't pass variables into 'uses:' below to allow callers to
      # request a version of the action. Referencing it by local path breaks external workflows
      # that call to this one.
      # The unfortunate workaround is for this file to be updated to point at specific commits
      # and reference that version of the action file in this reusable workflow.
      # Render the document with diffs in the 'pr' mode.
      - name: Render
        if: inputs.workflow == 'pr'
        uses: trustedcomputinggroup/pandoc/.github/actions/render@8f79b567c9dc6b15afba5d83d61e0d37f9508c47
        with:
          input-md: ${{ inputs.input }}
          output-basename: ${{ steps.gen_output_name.outputs.OUTPUT_FILENAME }}
          pdf: true
          diffbase: "${{ github.event.pull_request.base.sha }}"
          pr-number: "${{ github.event.number }}"
          pr-repo: "${{ github.repository }}"
      # Render the document with diffs in the 'manual' mode.
      - name: Render
        if: inputs.workflow == 'manual'
        uses: trustedcomputinggroup/pandoc/.github/actions/render@8f79b567c9dc6b15afba5d83d61e0d37f9508c47
        with:
          input-md: ${{ inputs.input }}
          output-basename: ${{ steps.gen_output_name.outputs.OUTPUT_FILENAME }}
          pdf: true
          diffbase: "${{ inputs.manual_diffbase }}"
      # Render the document without diffs in other modes.
      - name: Render
        if: inputs.workflow != 'pr' && inputs.workflow != 'manual'
        uses: trustedcomputinggroup/pandoc/.github/actions/render@8f79b567c9dc6b15afba5d83d61e0d37f9508c47
        with:
          input-md: ${{ inputs.input }}
          output-basename: ${{ steps.gen_output_name.outputs.OUTPUT_FILENAME }}
          pdf: true

      # Upload the PDF to the release in 'release' mode
      - name: Upload to release
        if: inputs.workflow == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.gen_output_name.outputs.OUTPUT_FILENAME }}*.pdf
          tag: ${{ github.ref }}
          asset_name: ${{ steps.gen_output_name.outputs.OUTPUT_FILENAME }}.pdf
          overwrite: true
          file_glob: true
      # Always upload all PDF and log files to the workflow artifacts
      - name: Upload pdfs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.gen_output_name.outputs.OUTPUT_FILENAME }}.pdf
          path: |
            ${{ steps.gen_output_name.outputs.OUTPUT_FILENAME }}*.pdf
        if: always()
      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.gen_output_name.outputs.OUTPUT_FILENAME }}.log
          path: |
            ${{ steps.gen_output_name.outputs.OUTPUT_FILENAME }}*.log
        if: always()
